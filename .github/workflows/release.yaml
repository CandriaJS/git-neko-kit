name: 发布发行版

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      releases_created: ${{ steps.release-please.outputs.releases_created }}

    steps:
      - name: 获取token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: 获取用户ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: 设置用户信息
        run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'

      - name: 运行 release-please-action
        id: release-please
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json

  build:
    outputs:
      package_name: ${{ steps.build-package.outputs.package_name }}
    needs: release
    if: needs.release.outputs.releases_created == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: 设置 pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.13.2
          run_install: |
            - args: [--no-frozen-lockfile]

      - name: 构建
        id: build-package
        run: |
          pnpm build
          pnpm pkg delete devDependencies
          mkdir -p ${{ runner.temp }}/temp/
          cp -r package.json README.md CHANGELOG.md dist ${{ runner.temp }}/temp/
          PACKAGE_NAME=$(pnpm pkg get name | tr -d '"')
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_OUTPUT

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE_NAME }}
          path: ${{ runner.temp }}/temp/
      
      - name: 获取主分支的最新提交消息
        id: commit-message
        run: |
          echo "commit_msg=$(git log origin/${{ github.ref_name }} -1 --pretty=format:'%s')" >> $GITHUB_ENV

  publish:
    runs-on: ubuntu-latest
    needs: [release, build]
    if: needs.release.outputs.releases_created == 'true'
    steps:
      - name: 导入构建产物
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.package_name }}
          path: ./

      - name: 设置 pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.13.2
          run_install: false

      - name: 发布到 NPM
        id: publish-to-npm
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          registry: https://registry.npmjs.org/
          access: public
          provenance: true

      - name: 设置包名
        run: |
          pnpm pkg set name=@${{ github.repository_owner }}/${{ steps.publish-to-npm.outputs.name }}

      - name: 发布到 GitHub Packages
        id: publish-to-github
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          registry: "https://npm.pkg.github.com"

        

